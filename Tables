------------ Attandence Table ------------------

CREATE TABLE attandence (
    attendence_id       INT PRIMARY KEY,
    emp_id       INT,
    date               DATE,
    checkin_time           TIMESTAMP,
    checkout_time          TIMESTAMP,
    status VARCHAR(20) CHECK (status in ('present','absent','leave','half-day'))
);



ALTER TABLE Attandence
ADD CONSTRAINT fk_emp_id FOREIGN KEY (emp_id) REFERENCES Employees(emp_id);


------------ Cuisine  Table ------------------

CREATE TABLE Cuisine  (
    Cuisine_id   INT  PRIMARY KEY,
    Cuisine_name VARCHAR(50)
);


------------ Customers  Table ------------------


CREATE TABLE Customers (
    customer_id     INT PRIMARY KEY,
    customer_name   VARCHAR(50),
    customer_number varchar(20),
    customer_gender CHAR CHECK( customer_gender IN ('M','F')),
    customer_dob    DATE
);

alter table Customers
modify Customer_number varchar(20);

------------ Dish_ingredients  Table ------------------

CREATE TABLE Ingredients (
    dish_id                  INT,
    product_id               INT,
    quantity                 INT,
    PRIMARY KEY (dish_id, product_id)
);

ALTER TABLE Ingredients
ADD CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES Inventory(product_id);

ALTER TABLE Ingredients
ADD CONSTRAINT fk_dish_id FOREIGN KEY (dish_id) REFERENCES Menu(dish_id);



------------ Emp_roles  Table ------------------


CREATE TABLE Emp_roles (
    role_id INT PRIMARY KEY,
    role_title     VARCHAR(30)
);


------------ Employees  Table ------------------

CREATE TABLE Employees (
    emp_id         INT PRIMARY KEY,
    emp_name       VARCHAR(50),
    emp_dob        DATE,
    emp_INT     INT,
    emp_doj        DATE,
    emp_gender     CHAR CHECK( emp_gender IN ('M','F')),
    manager_id INT,
    role_id    INT NOT NULL,
    salary INT
);



------------ Inventory  Table ------------------

CREATE TABLE Inventory (
    product_id   INT PRIMARY KEY,
    product_name VARCHAR(50),
    stock        INT,
    low_stock    INT,
    max_capacity INT,
    measure_unit VARCHAR(20) CHECK ( measure_unit IN('gm','ml'))
);


------------ Menu  Table ------------------


CREATE TABLE Menu (
    dish_id          INT PRIMARY KEY,
    dish_name        VARCHAR(50),
    cuisine_id      INT NOT NULL,
    dish_price       INT,
    dish_description VARCHAR(300)   
);

ALTER TABLE Menu
ADD CONSTRAINT fk_cuisine_id FOREIGN KEY (cuisine_id) REFERENCES Cuisine(cuisine_id);




------------ Order_details Table ------------------


CREATE TABLE Order_details (
    order_item_id                  INT PRIMARY KEY,
    order_id                       INT NOT NULL,
    dish_id                        INT NOT NULL,
    quantity                       INT,
    orders_customers_cust_id       INT NOT NULL,
    orders_payment_mode_id         INT NOT NULL,
    menu_menu_category_category_id INT NOT NULL
);



ALTER TABLE Order_details
ADD CONSTRAINT fk_order_id FOREIGN KEY (order_id) REFERENCES Orders(order_id);

ALTER TABLE Order_details
ADD CONSTRAINT fk_menu_dish_id FOREIGN KEY (dish_id) REFERENCES Menu(dish_id);




------------ Orders Table ------------------


CREATE TABLE Orders (
    order_id                INT PRIMARY KEY,
    customer_id             INT,
    order_date_time         TIMESTAMP,
    discount_type           VARCHAR(30),
    discount_amount         INT,
    order_amount            INT,
    payment_mode_id         INT
);

ALTER TABLE Orders
ADD CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id);

ALTER TABLE Orders
ADD CONSTRAINT fk_payment_mode_id FOREIGN KEY (payment_mode_id) REFERENCES Payment_mode(payment_mode_id);


------------ Payments Table ------------------


CREATE TABLE Payment_mode (
    payment_mode_id INT PRIMARY KEY,
    payment_mode    VARCHAR(30)
);



------------ Purchase_items Table ------------------


CREATE TABLE Purchase_items (
    purchase_items_id       INT PRIMARY KEY,
    purchase_order_id       INT NOT NULL,
    product_id    INT NOT NULL,
    quantity                INT
);



ALTER TABLE Purchase_items
ADD CONSTRAINT fk_purchase_order_id FOREIGN KEY (purchase_order_id) REFERENCES Purchase_orders(purchase_order_id);

ALTER TABLE Purchase_items
ADD CONSTRAINT fk_Inventory_product_id FOREIGN KEY (product_id) REFERENCES Inventory(product_id);



------------ Purchase_orders Table ------------------


CREATE TABLE Purchase_orders (
    purchase_order_id       INT PRIMARY KEY,
    purchase_date           DATE,
    supplier_id    INT NOT NULL,
    purchase_order_amount   INT,
    payment_mode_id INT NOT NULL
);


ALTER TABLE Purchase_orders
ADD CONSTRAINT fk_supplier_id FOREIGN KEY (supplier_id) REFERENCES Suppliers(supplier_id);

ALTER TABLE Purchase_orders
ADD CONSTRAINT fk_Purchase_payment_mode_id FOREIGN KEY (payment_mode_id) REFERENCES payment_mode(payment_mode_id);



------------ Reviews Table ------------------


CREATE TABLE Reviews (
    review_id         INT PRIMARY KEY,
    order_id          INT,
    star_ranking      INT,
    comments          VARCHAR(500),
    customer_id       INT NOT NULL
);


ALTER TABLE Reviews
ADD CONSTRAINT fk_Reviews_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id);



------------ Supliers Table ------------------


CREATE TABLE Suppliers (
    supplier_id     INT PRIMARY KEY,
    supplier_name   VARCHAR(150),
    supplier_number varchar(20)
);



------------ Expenses Table ------------------


CREATE TABLE Expenses (
    expense_id INT PRIMARY KEY,
    expense_type_id INT, 
    expense_date DATE NOT NULL,
    amount INT NOT NULL,
    payment_mode_id INT,
    notes VARCHAR(255)
);


ALTER TABLE Expenses
ADD CONSTRAINT fk_expense_type_id FOREIGN KEY (expense_type_id) REFERENCES Expense_type(expense_type_id);


ALTER TABLE Expenses
ADD CONSTRAINT fk_Expenses_payment_mode_id FOREIGN KEY (payment_mode_id) REFERENCES Payment_mode(payment_mode_id);



------------ Expense_type Table ------------------


CREATE TABLE Expense_type (
    expense_type_id INT PRIMARY KEY,
    expense_type VARCHAR(50)
);
